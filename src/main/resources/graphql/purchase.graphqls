type Purchase {
    id: ID!
    quantity: Int!,
    status: StatusPurchase!,
    client: Client,
    product: Product!
}

enum StatusPurchase {
    PENDING,
    OK
}

input PurchaseInput {
    quantity: Int!,
    clientId: ID!,
    productId: ID!
}

extend type Mutation {

    savePurchase(purchaseInput: PurchaseInput!) : Purchase!
    updatePurchase(id: ID!, purchaseInput: PurchaseInput!) : Purchase!
    approvePurchase(id: ID!) : StatusPurchase!
    deletePurchase(id: ID!) : Boolean!

}

extend type Query {

    getPurchase(id: ID!) : Purchase
    getAllPurchases(page: Int = 0, size: Int = 10, direction: Direction = ASC, sort: String = "id") : [Purchase]!

}

enum Direction {
    ASC,
    DESC
}